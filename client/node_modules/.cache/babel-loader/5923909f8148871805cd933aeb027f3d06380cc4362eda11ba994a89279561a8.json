{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/gwagminseong/Documents/github/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1100\\u1161\\u11A8\\u1100\\u1161\\u11A8 \\u1105\\u1166\\u1111\\u1169/travel/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;// import { useState } from \"react\";\nimport styled from\"styled-components\";// const { Configuration, OpenAIApi } = require(\"openai\");\n// const configuration = new Configuration({\n//     apiKey: \"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\",\n// });\n// const openai = new OpenAIApi(configuration);\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n\"])));var Banner=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  padding: 60px;\\n  background-size: cover;\\n\"])));var ChatContent=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  height: 350px;\\n  overflow-y: scroll;\\n\"])));var Line=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n  display: flex;\\n  flex-direction: column;\\n\"])));var ChatBoxAI=styled.span(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background-color: #eee;\\n  padding: 5px;\\n  max-width: 200px;\\n\"])));// const ChatBoxMine = styled(ChatBoxAI)`\n//   margin-left: auto;\n// `;\n// const ChatFormBox = styled.form`\n// `;\nvar ChatInputBox=styled.input(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n\"])));var ChatSendButton=styled.button(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n\\n\"])));function Chat(){// const [aiChat, setAiChat] = useState();\n// const [myChat, setMyChat] = useState();\n// const [loading, setLoading] = useState(false);\n// const sendSumit = (e: any) => {\n//     e.preventDefault();\n//     setMyChat(e.target.myText.value);\n//     setLoading(false);\n//     openai.createCompletion({\n//         model: \"text-davinci-003\",\n//         prompt: e.target.myText.value,\n//         temperature: 0.7,\n//         max_tokens: 256,\n//         top_p: 1,\n//         frequency_penalty: 0,\n//         presence_penalty: 0,\n//     }).then((result: any) => {\n//         setLoading(true);\n//         setAiChat(result.data.choices[0].text)\n//     })\n// }\nreturn/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(Banner,{children:[/*#__PURE__*/_jsxs(ChatContent,{children:[/*#__PURE__*/_jsx(Line,{children:/*#__PURE__*/_jsx(ChatBoxAI,{children:\"\\uC5B4\\uB514\\uAC00 \\uAD81\\uAE08\\uD558\\uC2E0\\uAC00\\uC694??\"})}),/*#__PURE__*/_jsx(Line,{}),/*#__PURE__*/_jsx(Line,{})]}),/*#__PURE__*/_jsx(ChatInputBox,{name:\"myText\"}),/*#__PURE__*/_jsx(ChatSendButton,{children:\"\\uBCF4\\uB0B4\\uAE30\"})]})});}export default Chat;","map":{"version":3,"names":["styled","jsx","_jsx","jsxs","_jsxs","Wrapper","div","_templateObject","_taggedTemplateLiteral","Banner","_templateObject2","ChatContent","_templateObject3","Line","_templateObject4","ChatBoxAI","span","_templateObject5","ChatInputBox","input","_templateObject6","ChatSendButton","button","_templateObject7","Chat","children","name"],"sources":["/Users/gwagminseong/Documents/github/리액트 각각 레포/travel/src/pages/Chat.tsx"],"sourcesContent":["// import { useState } from \"react\";\nimport styled from \"styled-components\";\n// const { Configuration, OpenAIApi } = require(\"openai\");\n\n// const configuration = new Configuration({\n//     apiKey: \"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\",\n// });\n// const openai = new OpenAIApi(configuration);\n\nconst Wrapper = styled.div`\n`;\n\nconst Banner = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-size: cover;\n`;\n\nconst ChatContent = styled.div`\n  height: 350px;\n  overflow-y: scroll;\n`;\n\nconst Line = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChatBoxAI = styled.span`\n  background-color: #eee;\n  padding: 5px;\n  max-width: 200px;\n`;\n\n// const ChatBoxMine = styled(ChatBoxAI)`\n//   margin-left: auto;\n// `;\n\n// const ChatFormBox = styled.form`\n// `;\n\nconst ChatInputBox = styled.input`\n`;\n\nconst ChatSendButton = styled.button`\n\n`;\n\n\nfunction Chat() {\n    // const [aiChat, setAiChat] = useState();\n    // const [myChat, setMyChat] = useState();\n    // const [loading, setLoading] = useState(false);\n\n    // const sendSumit = (e: any) => {\n    //     e.preventDefault();\n    //     setMyChat(e.target.myText.value);\n    //     setLoading(false);\n    //     openai.createCompletion({\n    //         model: \"text-davinci-003\",\n    //         prompt: e.target.myText.value,\n    //         temperature: 0.7,\n    //         max_tokens: 256,\n    //         top_p: 1,\n    //         frequency_penalty: 0,\n    //         presence_penalty: 0,\n    //     }).then((result: any) => {\n    //         setLoading(true);\n    //         setAiChat(result.data.choices[0].text)\n    //     })\n    // }\n\n    return (\n        <Wrapper>\n            <Banner>\n                <ChatContent>\n                    <Line>\n                        <ChatBoxAI>어디가 궁금하신가요??</ChatBoxAI>\n                    </Line>\n                    <Line>\n                        {/* <ChatBoxMine>{myChat}</ChatBoxMine> */}\n                    </Line>\n                    <Line>\n                        {/* {loading ?\n                            <ChatBoxAI>{aiChat}</ChatBoxAI>\n                            :\n                            <ChatBoxAI>...</ChatBoxAI>\n                        } */}\n                    </Line>\n                </ChatContent>\n                {/* <ChatFormBox onSubmit={sendSumit}> */}\n                <ChatInputBox name=\"myText\" />\n                <ChatSendButton>\n                    보내기\n                </ChatSendButton>\n                {/* </ChatFormBox> */}\n            </Banner>\n        </Wrapper>\n    );\n}\n\nexport default Chat;"],"mappings":"oXAAA;AACA,MAAO,CAAAA,MAAM,KAAM,mBAAmB,CACtC;AAEA;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,GAAM,CAAAC,OAAO,CAAGL,MAAM,CAACM,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,UACzB,CAED,GAAM,CAAAC,MAAM,CAAGT,MAAM,CAACM,GAAG,CAAAI,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,kJAOxB,CAED,GAAM,CAAAG,WAAW,CAAGX,MAAM,CAACM,GAAG,CAAAM,gBAAA,GAAAA,gBAAA,CAAAJ,sBAAA,mDAG7B,CAED,GAAM,CAAAK,IAAI,CAAGb,MAAM,CAACM,GAAG,CAAAQ,gBAAA,GAAAA,gBAAA,CAAAN,sBAAA,4EAItB,CAED,GAAM,CAAAO,SAAS,CAAGf,MAAM,CAACgB,IAAI,CAAAC,gBAAA,GAAAA,gBAAA,CAAAT,sBAAA,2EAI5B,CAED;AACA;AACA;AAEA;AACA;AAEA,GAAM,CAAAU,YAAY,CAAGlB,MAAM,CAACmB,KAAK,CAAAC,gBAAA,GAAAA,gBAAA,CAAAZ,sBAAA,UAChC,CAED,GAAM,CAAAa,cAAc,CAAGrB,MAAM,CAACsB,MAAM,CAAAC,gBAAA,GAAAA,gBAAA,CAAAf,sBAAA,YAEnC,CAGD,QAAS,CAAAgB,IAAIA,CAAA,CAAG,CACZ;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACItB,IAAA,CAACG,OAAO,EAAAoB,QAAA,cACJrB,KAAA,CAACK,MAAM,EAAAgB,QAAA,eACHrB,KAAA,CAACO,WAAW,EAAAc,QAAA,eACRvB,IAAA,CAACW,IAAI,EAAAY,QAAA,cACDvB,IAAA,CAACa,SAAS,EAAAU,QAAA,CAAC,2DAAY,EAAY,EAChC,cACPvB,IAAA,CAACW,IAAI,IAEE,cACPX,IAAA,CAACW,IAAI,IAME,GACG,cAEdX,IAAA,CAACgB,YAAY,EAACQ,IAAI,CAAC,QAAQ,EAAG,cAC9BxB,IAAA,CAACmB,cAAc,EAAAI,QAAA,CAAC,oBAEhB,EAAiB,GAEZ,EACH,CAElB,CAEA,cAAe,CAAAD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}