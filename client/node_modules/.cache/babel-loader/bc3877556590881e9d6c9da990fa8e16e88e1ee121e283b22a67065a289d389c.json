{"ast":null,"code":"var _jsxFileName = \"/Users/gwagminseong/Documents/github/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1100\\u1161\\u11A8\\u1100\\u1161\\u11A8 \\u1105\\u1166\\u1111\\u1169/travel/src/components/Answer.tsx\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { aiChat } from \"../apis/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = styled.span`\n  background: white;\n  border: 1px solid rgb(72, 132, 227);\n  border-radius: 8px;\n  padding: 52px 58px 54px 51px;\n  margin-bottom: 20px;\n  min-height: 140px;\n  gap: 30px;\n  font-size: 22px;\n  text-align: justify;\n  align-items: flex-start;\n`;\n_c = ChatBox;\nfunction Answer(props) {\n  _s();\n  const {\n    isLoading,\n    data: answerData\n  } = useQuery([\"aiChat\"], async () => {\n    const answer = await aiChat(props.question);\n    // console.log(\"쿼리요청됨\", answer)\n    return answer.message.result.translatedText;\n  });\n  console.log(isLoading, answerData);\n  return isLoading ? /*#__PURE__*/_jsxDEV(ChatBox, {\n    children: answerData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(ChatBox, {\n    children: \"Ai\\uAC00 \\uB300\\uB2F5 \\uD558\\uB294\\uC911 \\uC785\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 55\n  }, this);\n}\n_s(Answer, \"/dvk58RkjSdNQFtmmnRWXqcnAmk=\", false, function () {\n  return [useQuery];\n});\n_c2 = Answer;\nexport default Answer;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatBox\");\n$RefreshReg$(_c2, \"Answer\");","map":{"version":3,"names":["useQuery","styled","aiChat","jsxDEV","_jsxDEV","ChatBox","span","_c","Answer","props","_s","isLoading","data","answerData","answer","question","message","result","translatedText","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/gwagminseong/Documents/github/리액트 각각 레포/travel/src/components/Answer.tsx"],"sourcesContent":["// import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { aiChat } from \"../apis/api\";\n\nconst ChatBox = styled.span`\n  background: white;\n  border: 1px solid rgb(72, 132, 227);\n  border-radius: 8px;\n  padding: 52px 58px 54px 51px;\n  margin-bottom: 20px;\n  min-height: 140px;\n  gap: 30px;\n  font-size: 22px;\n  text-align: justify;\n  align-items: flex-start;\n`;\n\ninterface Iquestion {\n    question: string,\n}\n\nfunction Answer(props: Iquestion) {\n    const { isLoading, data: answerData } = useQuery(\n        [\"aiChat\"],\n        async () => {\n            const answer = await aiChat(props.question);\n            // console.log(\"쿼리요청됨\", answer)\n            return answer.message.result.translatedText;\n        },\n    );\n    console.log(isLoading, answerData)\n    return (\n        isLoading ? <ChatBox>{answerData}</ChatBox> : <ChatBox>Ai가 대답 하는중 입니다.</ChatBox>\n    );\n}\n\nexport default Answer;"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,aAAa;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,OAAO,GAAGJ,MAAM,CAACK,IAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,OAAO;AAiBb,SAASG,MAAMA,CAACC,KAAgB,EAAE;EAAAC,EAAA;EAC9B,MAAM;IAAEC,SAAS;IAAEC,IAAI,EAAEC;EAAW,CAAC,GAAGb,QAAQ,CAC5C,CAAC,QAAQ,CAAC,EACV,YAAY;IACR,MAAMc,MAAM,GAAG,MAAMZ,MAAM,CAACO,KAAK,CAACM,QAAQ,CAAC;IAC3C;IACA,OAAOD,MAAM,CAACE,OAAO,CAACC,MAAM,CAACC,cAAc;EAC/C,CAAC,CACJ;EACDC,OAAO,CAACC,GAAG,CAACT,SAAS,EAAEE,UAAU,CAAC;EAClC,OACIF,SAAS,gBAAGP,OAAA,CAACC,OAAO;IAAAgB,QAAA,EAAER;EAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAW,gBAAGrB,OAAA,CAACC,OAAO;IAAAgB,QAAA,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAU;AAExF;AAACf,EAAA,CAbQF,MAAM;EAAA,QAC6BR,QAAQ;AAAA;AAAA0B,GAAA,GAD3ClB,MAAM;AAef,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}